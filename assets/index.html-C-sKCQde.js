import{_ as i,c as a,f as e,o as n}from"./app-LHpjaFTr.js";const s={};function t(u,l){return n(),a("div",null,l[0]||(l[0]=[e('<h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><h1 id="汇编语言的组成" tabindex="-1"><a class="header-anchor" href="#汇编语言的组成"><span>汇编语言的组成</span></a></h1><ul><li>汇编指令 <ul><li>机器码的助记符</li></ul></li><li>伪指令 <ul><li>由编译器执行</li></ul></li><li>其他符号 <ul><li>编译器识别</li></ul></li></ul><h1 id="cpu对存储器的读写" tabindex="-1"><a class="header-anchor" href="#cpu对存储器的读写"><span>CPU对存储器的读写</span></a></h1><ul><li>总线 <ul><li>逻辑划分 <ul><li>地址总线 <ul><li>CPU通过地址总线来指定存储单元</li></ul></li><li>数据总线 <ul><li>CPU与内存或其他器件之间的数据传送</li></ul></li><li>控制总线 <ul><li>CPU对外部器件的控制</li></ul></li></ul></li></ul></li></ul><h1 id="执行部件" tabindex="-1"><a class="header-anchor" href="#执行部件"><span>执行部件</span></a></h1><ul><li>寄存器 Register <ul><li>E开头为扩展的意思，是32位</li><li>按用途分 <ul><li>数据寄存器 <ul><li>EAX 累加器 Accumulator <ul><li>存储单元地址的符号表示</li><li>(xxx) 表示xxx单元中的内容</li></ul></li><li>EBX 基址寄存器 Base</li><li>ECX 计数器 Count</li><li>EDX 数据寄存器 Data</li><li>低16位组：AX BX CX DX</li><li>高8位组 AH BH CH DH</li><li>低8位组 AL BL CL DL *<code> MOV AX,0ffH</code></li></ul></li><li>指示器变址寄存器组 <ul><li>ESI 源变址寄存器 Source Index</li><li>EDI 目的变址寄存器 Destination Index</li><li>ESP 堆栈指示器 Stack Pointer</li><li>EBP 堆栈基址寄存器 Base Pointer</li></ul></li></ul></li></ul></li></ul><h1 id="指令预取部件和指令译码部件" tabindex="-1"><a class="header-anchor" href="#指令预取部件和指令译码部件"><span>指令预取部件和指令译码部件</span></a></h1><ul><li>指令指示器 EIP <ul><li>保存下一条将要被CPU执行的指令的偏移地址(EA)</li><li>内容由处理器硬件自动设置</li><li>不能由指令直接访问</li><li>执行转移指令，子程序调用指令等可使其改变</li></ul></li></ul><h1 id="分段部件和分页部件" tabindex="-1"><a class="header-anchor" href="#分段部件和分页部件"><span>分段部件和分页部件</span></a></h1><h2 id="分段部件中的段寄存器" tabindex="-1"><a class="header-anchor" href="#分段部件中的段寄存器"><span>分段部件中的段寄存器</span></a></h2><ul><li>CS 代码段寄存器 Code Segment</li><li>DS 数据段寄存器 Data Segment</li><li>SS 堆栈段寄存器 Stack Segment</li><li>ES 附加数据段寄存器</li><li>FS</li><li>GS</li></ul><h1 id="_80x86的三种工作方式" tabindex="-1"><a class="header-anchor" href="#_80x86的三种工作方式"><span>80x86的三种工作方式</span></a></h1><ul><li>实方式（实地址方式）</li><li>保护方式（虚地址）</li><li>虚拟8086方式</li></ul><h1 id="主存储器" tabindex="-1"><a class="header-anchor" href="#主存储器"><span>主存储器</span></a></h1><ul><li>基本存储单位：位</li><li>最小寻址单位：字节</li><li>WORD 字：2个相邻的字节</li><li>双字：4个连续的字节组成，地址为最低字节的地址</li></ul>',16)]))}const h=i(s,[["render",t],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/pl/assembly/","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"分段部件中的段寄存器","slug":"分段部件中的段寄存器","link":"#分段部件中的段寄存器","children":[]}],"git":{"updatedTime":1645920694000,"contributors":[{"name":"sindorei","email":"wupan1030@foxmail.com","commits":2,"url":"https://github.com/sindorei"}]},"filePathRelative":"pl/assembly/README.md"}');export{h as comp,d as data};
