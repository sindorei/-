import{_ as n,c as a,f as e,o as p}from"./app-LHpjaFTr.js";const l={};function t(i,s){return p(),a("div",null,s[0]||(s[0]=[e(`<h1 id="qml-syntax" tabindex="-1"><a class="header-anchor" href="#qml-syntax"><span>QML Syntax</span></a></h1><div class="language-qml line-numbers-mode" data-highlighter="prismjs" data-ext="qml" data-title="qml"><pre><code><span class="line"><span class="token comment">// RectangleExample.qml</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> QtQuick</span>
<span class="line"></span>
<span class="line"><span class="token comment">// 根元素 Rectangle</span></span>
<span class="line"><span class="token class-name">Rectangle</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// id不加引号</span></span>
<span class="line">    <span class="token property">id</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript">root</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 属性格式: &lt;name&gt;: &lt;value&gt;</span></span>
<span class="line">    <span class="token comment">// 写在一行需要加; 换行可不加</span></span>
<span class="line">    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token number">120</span></span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token number">240</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 颜色属性</span></span>
<span class="line">    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token string">&quot;#4A4A4A&quot;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 申明嵌套的子元素</span></span>
<span class="line">    <span class="token class-name">Image</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">id</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript">triangle</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 通过parent访问父原色</span></span>
<span class="line">        <span class="token property">x</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token punctuation">(</span>parent<span class="token punctuation">.</span>width <span class="token operator">-</span> width<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span></span><span class="token punctuation">;</span> <span class="token property">y</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token number">40</span></span></span>
<span class="line"></span>
<span class="line">        <span class="token property">source</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token string">&#39;assets/triangle_red.png&#39;</span></span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token class-name">Text</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 未命名（无id）</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 通过id访问元素</span></span>
<span class="line">        <span class="token property">y</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript">triangle<span class="token punctuation">.</span>y <span class="token operator">+</span> triangle<span class="token punctuation">.</span>height <span class="token operator">+</span> <span class="token number">20</span></span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// reference root element</span></span>
<span class="line">        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript">root<span class="token punctuation">.</span>width</span></span>
<span class="line"></span>
<span class="line">        <span class="token property">color</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token string">&#39;white&#39;</span></span></span>
<span class="line">        <span class="token property">horizontalAlignment</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript">Text<span class="token punctuation">.</span>AlignHCenter</span></span>
<span class="line">        <span class="token property">text</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token string">&#39;Triangle&#39;</span></span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>import</code>申明导入的模块，可选择添加版本号(Qt5中是必需的)，格式： <code>&lt;major&gt;.&lt;minor&gt;</code></li><li>像 C/C++ and JavaScript一样， <code>//</code> 为单行注释 <code>/* */</code> 为多行注释</li><li>像HTML一样，每个QML文件都需要一个根元素</li><li>通过元素的名称申明元素，后面跟 <code>{ }</code></li><li>元素属性格式为<code>name: value</code></li><li>QML文档中的任意元素都可以通过id（无引号的标识符）访问</li><li>元素可以嵌套。子元素可以通过<code>parent</code>关键字访问到父元素</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>可通过 <code>$QTDIR/bin/qml FileName.qml</code>($QTDIR为qt安装目录) 直接运行qml文件，或者通过QT Creator</p></div><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2><div class="language-qml line-numbers-mode" data-highlighter="prismjs" data-ext="qml" data-title="qml"><pre><code><span class="line"><span class="token class-name">Text</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// (1) 标识符</span></span>
<span class="line">    <span class="token property">id</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript">thisLabel</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (2) 设置x、y坐标</span></span>
<span class="line">    <span class="token property">x</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token number">24</span></span><span class="token punctuation">;</span> <span class="token property">y</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token number">16</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (3) 绑定 height 为 2 * width</span></span>
<span class="line">    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token number">2</span> <span class="token operator">*</span> width</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (4) 自定义属性</span></span>
<span class="line">    <span class="token property"><span class="token keyword">property</span> <span class="token property">int</span> <span class="token property">times</span></span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token number">24</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (5) 属性别名</span></span>
<span class="line">    <span class="token property"><span class="token keyword">property</span> <span class="token property">alias</span> <span class="token property">anotherTimes</span></span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript">thisLabel<span class="token punctuation">.</span>times</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (6) set text appended by value</span></span>
<span class="line">    <span class="token property">text</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token string">&quot;Greetings &quot;</span> <span class="token operator">+</span> times</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (7) font is a grouped property</span></span>
<span class="line">    <span class="token property">font.family</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token string">&quot;Ubuntu&quot;</span></span></span>
<span class="line">    <span class="token property">font.pixelSize</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token number">24</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (8) KeyNavigation is an attached property</span></span>
<span class="line">    <span class="token property">KeyNavigation.tab</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript">otherLabel</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (9) signal handler for property changes</span></span>
<span class="line">    <span class="token property">onHeightChanged</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;height:&#39;</span><span class="token punctuation">,</span> height<span class="token punctuation">)</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// focus is need to receive key events</span></span>
<span class="line">    <span class="token property">focus</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token boolean">true</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// change color based on focus value</span></span>
<span class="line">    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript">focus <span class="token operator">?</span> <span class="token string">&quot;red&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;black&quot;</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>(1) id 是一个特殊的属性，不是字符串，类似标识符，在文档中唯一。</p></li><li><p>(2) 属性根据类型可以设置值。如果没有设置，会被默认设置一个初始值。可在文档中查看相关元素的某个属性的初始值。</p></li><li><p>(3) 一个属性可以依赖另一个或多个其他属性。被称为绑定。 具有响应式的能力。即被绑定的属性更新了，则绑定该属性的属性也会更新。</p></li><li><p>(4) 可通过property修饰符新增属性。格式： <code>property &lt;type&gt; &lt;name&gt; : &lt;value&gt;</code>。如果没给初始值，会选择默认的。</p></li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><blockquote><p>可通过<code>default</code>关键字将某个属性申明为默认属性. 如果在一个元素内创建了另一个元素，但未显式绑定到某个属性，则它会绑定到默认属性。例如，当您添加子元素时，如果子元素是可见元素，它们将自动添加到默认属性<code>children</code>中。</p></blockquote></div><ul><li><p>(5) 另一种申明属性的重要方式是通过<code>alias</code>关键字 (<code>property alias &lt;name&gt;: &lt;reference&gt;</code>). <code>alias</code>关键字允许我们将对象的属性或对象本身从类型内部转发到外部范围。稍后我们将在定义组件时使用此技术以将内部属性或元素 ID 导出到根级别。属性别名不需要类型，它使用引用的属性或对象的类型</p></li><li><p>(6) <code>text</code>属性依赖与自定义的<code>int</code>类型属性 <code>times</code>。 <code>int</code>类型值自动转成<code>string</code>类型. <code>times</code>变化时，<code>text</code>也会更新.</p></li><li><p>(7) 有些属性是组合属性。 当属性更加结构化并且相关属性应该组合在一起时使用此功能。 另一种写组合属性的方式为： <code>font { family: &quot;Ubuntu&quot;; pixelSize: 24 }</code>。</p></li><li><p>(8) 一些属性属于元素类本身。在应用程序中只出现一次的全局设置元素（例如键盘输入）。格式： <code>&lt;Element&gt;.&lt;property&gt;: &lt;value&gt;</code>.</p></li><li><p>(9) 每个属性都可以提供信号处理. 此处理在属性改变后调用. 例如，这里我们想要在高度变化时被通知，用内置的<code>console</code>输出日志。</p></li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p>元素 ID 只能用于引用文档中的元素（例如当前文件）。 QML 提供了一种称为“动态作用域”的机制，稍后加载的文档会覆盖较早加载的文档中的元素 ID。这使得可以从先前加载的文档中引用元素 ID（如果它们尚未被覆盖）。这就像创建全局变量。不幸的是，这在实践中经常会导致非常糟糕的代码，其中程序取决于执行顺序。不幸的是，这无法关闭。请小心使用；或者，更好的是，根本不使用这种机制。最好使用文档根元素上的属性将要提供给外界的元素导出。</p></div><h2 id="脚本" tabindex="-1"><a class="header-anchor" href="#脚本"><span>脚本</span></a></h2><div class="language-qml line-numbers-mode" data-highlighter="prismjs" data-ext="qml" data-title="qml"><pre><code><span class="line"><span class="token class-name">Text</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">id</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript">label</span></span>
<span class="line"></span>
<span class="line">    <span class="token property">x</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token number">24</span></span><span class="token punctuation">;</span> <span class="token property">y</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token number">24</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 自定义计数属性，用于空格键按下时</span></span>
<span class="line">    <span class="token property"><span class="token keyword">property</span> <span class="token property">int</span> <span class="token property">spacePresses</span></span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token number">0</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token property">text</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token string">&quot;Space pressed: &quot;</span> <span class="token operator">+</span> spacePresses <span class="token operator">+</span> <span class="token string">&quot; times&quot;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (1) text 变化时的处理。需要使用函数捕获参数</span></span>
<span class="line">    <span class="token property">onTextChanged</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;text changed to:&quot;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 获取键盘事件需要将focus设为true</span></span>
<span class="line">    <span class="token property">focus</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token boolean">true</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (2) 当空格键被按下时滴啊用js方法进行处理</span></span>
<span class="line">    <span class="token property">Keys.onSpacePressed</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// ESC键按下时清除文本</span></span>
<span class="line">    <span class="token property">Keys.onEscapePressed</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token punctuation">{</span></span>
<span class="line">        label<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">&#39;&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (3) JS函数</span></span>
<span class="line">    <span class="token javascript-function language-javascript"><span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        spacePresses <span class="token operator">=</span> spacePresses <span class="token operator">+</span> <span class="token number">1</span></span>
<span class="line">    <span class="token punctuation">}</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>(1) 按下空格键<code>text</code>的值变化时，就会调用<code>onTextChanged</code>。 当我们使用信号注入的参数时，我们需要在这里使用函数语法。 也可以使用箭头函数 <code>((text) =&gt; {})</code>, 但是我们认为 <code>function(text) {}</code> 更可读。</p></li><li><p>(2) 当空格键被按下是调用js 函数 <code>increment()</code></p></li><li><p>(3) 定义JavaScript函数<code>function &lt;name&gt;(&lt;parameters&gt;) { ... }</code></p></li></ul><h2 id="绑定" tabindex="-1"><a class="header-anchor" href="#绑定"><span>绑定</span></a></h2><p>QML<code>:</code>(绑定) 和 JavaScript<code>=</code>(赋值) 之间的区别在于，绑定是一个契约并且在绑定的整个生命周期内保持为真，而 JavaScript 赋值 (<code>=</code>) 是一次性值赋值。</p><p>当在属性上设置新绑定或者甚至将 JavaScript 值分配给属性时，绑定的生命周期结束。例如，将文本属性设置为空字符串的按键处理程序会破坏我们的增量显示</p><div class="language-qml line-numbers-mode" data-highlighter="prismjs" data-ext="qml" data-title="qml"><pre><code><span class="line"><span class="token property">Keys.onEscapePressed</span><span class="token punctuation">:</span> <span class="token javascript-expression language-javascript"><span class="token punctuation">{</span></span>
<span class="line">    label<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">&#39;&#39;</span></span>
<span class="line"><span class="token punctuation">}</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按下ESC键后，再按空格键，将不会再更新 text属性的值， (<code>text: “Space pressed: ” + spacePresses + ” times”</code>) 的绑定销毁了.</p>`,18)]))}const o=n(l,[["render",t],["__file","qml_syntax.html.vue"]]),r=JSON.parse('{"path":"/pl/c__/qt/qml_syntax.html","title":"QML Syntax","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[]},{"level":2,"title":"脚本","slug":"脚本","link":"#脚本","children":[]},{"level":2,"title":"绑定","slug":"绑定","link":"#绑定","children":[]}],"git":{"updatedTime":1669891316000,"contributors":[{"name":"sindorei","email":"wupan1030@foxmail.com","commits":7,"url":"https://github.com/sindorei"}]},"filePathRelative":"pl/c++/qt/qml_syntax.md"}');export{o as comp,r as data};
