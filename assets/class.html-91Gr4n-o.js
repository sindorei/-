import{_ as s,c as a,f as p,o as e}from"./app-LHpjaFTr.js";const t={};function l(c,n){return e(),a("div",null,n[0]||(n[0]=[p(`<h1 id="面向对象" tabindex="-1"><a class="header-anchor" href="#面向对象"><span>面向对象</span></a></h1><h2 id="类的定义" tabindex="-1"><a class="header-anchor" href="#类的定义"><span>类的定义</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment">#类定义</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">people</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment">#定义基本属性</span></span>
<span class="line">    name <span class="token operator">=</span> <span class="token string">&#39;&#39;</span></span>
<span class="line">    age <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    <span class="token comment">#定义私有属性,私有属性在类外部无法直接进行访问</span></span>
<span class="line">    __weight <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    <span class="token comment">#定义构造方法</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>n<span class="token punctuation">,</span>a<span class="token punctuation">,</span>w<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>name <span class="token operator">=</span> n</span>
<span class="line">        self<span class="token punctuation">.</span>age <span class="token operator">=</span> a</span>
<span class="line">        self<span class="token punctuation">.</span>__weight <span class="token operator">=</span> w</span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">speak</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;%s 说: 我 %d 岁。&quot;</span> <span class="token operator">%</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>name<span class="token punctuation">,</span>self<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"> </span>
<span class="line"><span class="token comment">#单继承示例</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">student</span><span class="token punctuation">(</span>people<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    grade <span class="token operator">=</span> <span class="token string">&#39;&#39;</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>n<span class="token punctuation">,</span>a<span class="token punctuation">,</span>w<span class="token punctuation">,</span>g<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment">#调用父类的构函</span></span>
<span class="line">        people<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">,</span>n<span class="token punctuation">,</span>a<span class="token punctuation">,</span>w<span class="token punctuation">)</span></span>
<span class="line">        self<span class="token punctuation">.</span>grade <span class="token operator">=</span> g</span>
<span class="line">    <span class="token comment">#覆写父类的方法</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">speak</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;%s 说: 我 %d 岁了，我在读 %d 年级&quot;</span><span class="token operator">%</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>name<span class="token punctuation">,</span>self<span class="token punctuation">.</span>age<span class="token punctuation">,</span>self<span class="token punctuation">.</span>grade<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"> </span>
<span class="line"><span class="token comment">#另一个类，多重继承之前的准备</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">speaker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    topic <span class="token operator">=</span> <span class="token string">&#39;&#39;</span></span>
<span class="line">    name <span class="token operator">=</span> <span class="token string">&#39;&#39;</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>n<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>name <span class="token operator">=</span> n</span>
<span class="line">        self<span class="token punctuation">.</span>topic <span class="token operator">=</span> t</span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">speak</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我叫 %s，我是一个演说家，我演讲的主题是 %s&quot;</span><span class="token operator">%</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>name<span class="token punctuation">,</span>self<span class="token punctuation">.</span>topic<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"> </span>
<span class="line"><span class="token comment">#多重继承</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">sample</span><span class="token punctuation">(</span>speaker<span class="token punctuation">,</span>student<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    a <span class="token operator">=</span><span class="token string">&#39;&#39;</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>n<span class="token punctuation">,</span>a<span class="token punctuation">,</span>w<span class="token punctuation">,</span>g<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        student<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">,</span>n<span class="token punctuation">,</span>a<span class="token punctuation">,</span>w<span class="token punctuation">,</span>g<span class="token punctuation">)</span></span>
<span class="line">        speaker<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">,</span>n<span class="token punctuation">,</span>t<span class="token punctuation">)</span></span>
<span class="line"> </span>
<span class="line">test <span class="token operator">=</span> sample<span class="token punctuation">(</span><span class="token string">&quot;Tim&quot;</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&quot;Python&quot;</span><span class="token punctuation">)</span></span>
<span class="line">test<span class="token punctuation">.</span>speak<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#方法名同，默认调用的是在括号中参数位置排前父类的方法</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方法重写" tabindex="-1"><a class="header-anchor" href="#方法重写"><span>方法重写</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Parent</span><span class="token punctuation">:</span>        <span class="token comment"># 定义父类</span></span>
<span class="line">   <span class="token keyword">def</span> <span class="token function">myMethod</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&#39;调用父类方法&#39;</span><span class="token punctuation">)</span></span>
<span class="line"> </span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">Child</span><span class="token punctuation">(</span>Parent<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 定义子类</span></span>
<span class="line">   <span class="token keyword">def</span> <span class="token function">myMethod</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&#39;调用子类方法&#39;</span><span class="token punctuation">)</span></span>
<span class="line"> </span>
<span class="line">c <span class="token operator">=</span> Child<span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token comment"># 子类实例</span></span>
<span class="line">c<span class="token punctuation">.</span>myMethod<span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token comment"># 子类调用重写方法</span></span>
<span class="line"><span class="token builtin">super</span><span class="token punctuation">(</span>Child<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">.</span>myMethod<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#用子类对象调用父类已被覆盖的方法</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="类属性与方法" tabindex="-1"><a class="header-anchor" href="#类属性与方法"><span>类属性与方法</span></a></h2><h3 id="类的私有属性" tabindex="-1"><a class="header-anchor" href="#类的私有属性"><span>类的私有属性</span></a></h3><p>__private_attrs：两个下划线开头，声明该属性为私有，不能在类的外部被使用或直接访问。在类内部的方法中使用时 self.__private_attrs。</p><h3 id="类的方法" tabindex="-1"><a class="header-anchor" href="#类的方法"><span>类的方法</span></a></h3><p>在类的内部，使用 def 关键字来定义一个方法，与一般函数定义不同，类方法必须包含参数 self，且为第一个参数，self 代表的是类的实例。</p><p>self 的名字并不是规定死的，也可以使用 this，但是最好还是按照约定使用 self。</p><h3 id="类的私有方法" tabindex="-1"><a class="header-anchor" href="#类的私有方法"><span>类的私有方法</span></a></h3><p>__private_method：两个下划线开头，声明该方法为私有方法，只能在类的内部调用 ，不能在类的外部调用。self.__private_methods。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">JustCounter</span><span class="token punctuation">:</span></span>
<span class="line">    __secretCount <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># 私有变量</span></span>
<span class="line">    publicCount <span class="token operator">=</span> <span class="token number">0</span>    <span class="token comment"># 公开变量</span></span>
<span class="line"> </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">count</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>__secretCount <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">        self<span class="token punctuation">.</span>publicCount <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">        <span class="token keyword">print</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>__secretCount<span class="token punctuation">)</span></span>
<span class="line"> </span>
<span class="line">counter <span class="token operator">=</span> JustCounter<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">counter<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">counter<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span> <span class="token punctuation">(</span>counter<span class="token punctuation">.</span>publicCount<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span> <span class="token punctuation">(</span>counter<span class="token punctuation">.</span>__secretCount<span class="token punctuation">)</span>  <span class="token comment"># 报错，实例不能访问私有变量</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="类的专有方法" tabindex="-1"><a class="header-anchor" href="#类的专有方法"><span>类的专有方法：</span></a></h2><ul><li><code>__init__</code>: 构造函数，在生成对象时调用</li><li><code>__del__</code>: 析构函数，释放对象时使用</li><li><code>__repr__</code>: 打印，转换</li><li><code>__setitem__</code>: 按照索引赋值</li><li><code>__getitem__</code>: 按照索引获取值</li><li><code>__len__</code>: 获得长度</li><li><code>__cmp__</code>: 比较运算</li><li><code>__call__</code>: 函数调用</li><li><code>__add__</code>: 加运算</li><li><code>__sub__</code>: 减运算</li><li><code>__mul__</code>: 乘运算</li><li><code>__truediv__</code>: 除运算</li><li><code>__mod__</code>: 求余运算</li><li><code>__pow__</code>: 乘方</li></ul><h2 id="运算符重载" tabindex="-1"><a class="header-anchor" href="#运算符重载"><span>运算符重载</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Vector</span><span class="token punctuation">:</span></span>
<span class="line">   <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">      self<span class="token punctuation">.</span>a <span class="token operator">=</span> a</span>
<span class="line">      self<span class="token punctuation">.</span>b <span class="token operator">=</span> b</span>
<span class="line"> </span>
<span class="line">   <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token string">&#39;Vector (%d, %d)&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>a<span class="token punctuation">,</span> self<span class="token punctuation">.</span>b<span class="token punctuation">)</span></span>
<span class="line">   </span>
<span class="line">   <span class="token keyword">def</span> <span class="token function">__add__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>other<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token keyword">return</span> Vector<span class="token punctuation">(</span>self<span class="token punctuation">.</span>a <span class="token operator">+</span> other<span class="token punctuation">.</span>a<span class="token punctuation">,</span> self<span class="token punctuation">.</span>b <span class="token operator">+</span> other<span class="token punctuation">.</span>b<span class="token punctuation">)</span></span>
<span class="line"> </span>
<span class="line">v1 <span class="token operator">=</span> Vector<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line">v2 <span class="token operator">=</span> Vector<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span> <span class="token punctuation">(</span>v1 <span class="token operator">+</span> v2<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18)]))}const i=s(t,[["render",l],["__file","class.html.vue"]]),u=JSON.parse('{"path":"/pl/python/class.html","title":"面向对象","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"类的定义","slug":"类的定义","link":"#类的定义","children":[]},{"level":2,"title":"方法重写","slug":"方法重写","link":"#方法重写","children":[]},{"level":2,"title":"类属性与方法","slug":"类属性与方法","link":"#类属性与方法","children":[{"level":3,"title":"类的私有属性","slug":"类的私有属性","link":"#类的私有属性","children":[]},{"level":3,"title":"类的方法","slug":"类的方法","link":"#类的方法","children":[]},{"level":3,"title":"类的私有方法","slug":"类的私有方法","link":"#类的私有方法","children":[]}]},{"level":2,"title":"类的专有方法：","slug":"类的专有方法","link":"#类的专有方法","children":[]},{"level":2,"title":"运算符重载","slug":"运算符重载","link":"#运算符重载","children":[]}],"git":{"updatedTime":1674024186000,"contributors":[{"name":"sindorei","email":"wupan1030@foxmail.com","commits":2,"url":"https://github.com/sindorei"}]},"filePathRelative":"pl/python/class.md"}');export{i as comp,u as data};
