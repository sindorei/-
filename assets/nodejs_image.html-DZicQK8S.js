import{_ as n,c as o,f as i,o as a}from"./app-LHpjaFTr.js";const s={};function l(d,e){return a(),o("div",null,e[0]||(e[0]=[i('<h1 id="nodejs官方镜像" tabindex="-1"><a class="header-anchor" href="#nodejs官方镜像"><span>NodeJs官方镜像</span></a></h1><h2 id="node-version" tabindex="-1"><a class="header-anchor" href="#node-version"><span><code>node:&lt;version&gt;</code></span></a></h2><ul><li>基于Debian,官方默认镜像。当你不确定你需要什么的时候选择这个就对了。这个被设计成可以丢弃的镜像，也就是可以用作构建源码使用。体积挺大。</li></ul><h2 id="node-version-slim" tabindex="-1"><a class="header-anchor" href="#node-version-slim"><span><code>node:&lt;version&gt;-slim</code></span></a></h2><ul><li>基于Debian， 删除了很多默认公共的软件包，只有node运行的最小环境。除非你有空间限制，否则推荐使用默认镜像。</li></ul><h2 id="node-version-alpine" tabindex="-1"><a class="header-anchor" href="#node-version-alpine"><span><code>node:&lt;version&gt;-alpine</code></span></a></h2><ul><li>基于alpine, 比Debian小的多。如果想要最小的镜像，可以选择这个做为base。需要注意的是，alpine使用musl代替glibc。一些c环境的软件可能不兼容。但大部分没问题。 alpine中安装软件使用<code>apk</code></li></ul><h1 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h1><ul><li>https://github.com/nodejs/docker-node/blob/master/README.md#how-to-use-this-image</li></ul>',9)]))}const t=n(s,[["render",l],["__file","nodejs_image.html.vue"]]),c=JSON.parse('{"path":"/common/docker/nodejs_image.html","title":"NodeJs官方镜像","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"node:<version>","slug":"node-version","link":"#node-version","children":[]},{"level":2,"title":"node:<version>-slim","slug":"node-version-slim","link":"#node-version-slim","children":[]},{"level":2,"title":"node:<version>-alpine","slug":"node-version-alpine","link":"#node-version-alpine","children":[]}],"git":{"updatedTime":1731659376000,"contributors":[{"name":"sindorei","email":"wupan1030@foxmail.com","commits":2,"url":"https://github.com/sindorei"}]},"filePathRelative":"common/docker/nodejs_image.md"}');export{t as comp,c as data};
