import{_ as a,c as i,f as t,o as l}from"./app-LHpjaFTr.js";const n={};function r(s,e){return l(),i("div",null,e[0]||(e[0]=[t('<h1 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h1><h2 id="在线文档" tabindex="-1"><a class="header-anchor" href="#在线文档"><span>在线文档</span></a></h2><ul><li><a href="https://developer.apple.com/documentation/swift" target="_blank" rel="noopener noreferrer">swift</a></li><li><a href="https://docs.swift.org/swift-book/" target="_blank" rel="noopener noreferrer">swift-book</a></li></ul><h2 id="中文版教程" tabindex="-1"><a class="header-anchor" href="#中文版教程"><span>中文版教程</span></a></h2><ul><li><a href="https://swiftgg.gitbook.io/swift/huan-ying-shi-yong-swift" target="_blank" rel="noopener noreferrer">swiftgg</a></li></ul><h1 id="基础" tabindex="-1"><a class="header-anchor" href="#基础"><span>基础</span></a></h1><h2 id="常量和变量" tabindex="-1"><a class="header-anchor" href="#常量和变量"><span>常量和变量</span></a></h2><ul><li><code>let</code> 申明常量</li><li><code>var</code> 申明变量</li></ul><h2 id="类型注解" tabindex="-1"><a class="header-anchor" href="#类型注解"><span>类型注解</span></a></h2><ul><li>swfit可根据代码的上下文自行推断变量的类型</li><li>如果申明变量时不想赋上初始值则可以加上类型注解（type annotation）来让swift知道是什么类型</li></ul>',10)]))}const h=a(n,[["render",r],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/pl/swift/","title":"参考文档","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"在线文档","slug":"在线文档","link":"#在线文档","children":[]},{"level":2,"title":"中文版教程","slug":"中文版教程","link":"#中文版教程","children":[]},{"level":2,"title":"常量和变量","slug":"常量和变量","link":"#常量和变量","children":[]},{"level":2,"title":"类型注解","slug":"类型注解","link":"#类型注解","children":[]}],"git":{"updatedTime":1669361850000,"contributors":[{"name":"sindorei","email":"wupan1030@foxmail.com","commits":1,"url":"https://github.com/sindorei"}]},"filePathRelative":"pl/swift/index.md"}');export{h as comp,d as data};
